{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 223, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/genkit.ts"],"sourcesContent":["import {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai';\n\nexport const ai = genkit({\n  plugins: [googleAI()],\n  model: 'googleai/gemini-2.5-flash',\n});\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;;;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QAAC,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD;KAAI;IACrB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 244, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/generate-revenue-forecast.ts"],"sourcesContent":["'use server';\n\n/**\n * @fileOverview This file defines a Genkit flow for generating revenue forecasts based on recent trends.\n *\n * The flow analyzes revenue data from the last three months to predict future revenue impact, providing insights for business strategy adjustments.\n *\n * @exported generateRevenueForecast - An async function that triggers the revenue forecast flow.\n * @exported GenerateRevenueForecastInput - The input type for the generateRevenueForecast function.\n * @exported GenerateRevenueForecastOutput - The return type for the generateRevenueForecast function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst GenerateRevenueForecastInputSchema = z.object({\n  monthlyRevenue: z\n    .array(z.number())\n    .length(3)\n    .describe('Array of monthly revenue for the last three months, in chronological order.'),\n  currency: z.string().describe('The currency of the revenue figures (e.g., USD, EUR, BRL).'),\n});\nexport type GenerateRevenueForecastInput = z.infer<typeof GenerateRevenueForecastInputSchema>;\n\nconst GenerateRevenueForecastOutputSchema = z.object({\n  forecast: z.string().describe('A textual forecast of potential revenue impact based on the last three months.'),\n});\nexport type GenerateRevenueForecastOutput = z.infer<typeof GenerateRevenueForecastOutputSchema>;\n\nexport async function generateRevenueForecast(input: GenerateRevenueForecastInput): Promise<GenerateRevenueForecastOutput> {\n  return generateRevenueForecastFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'generateRevenueForecastPrompt',\n  input: {schema: GenerateRevenueForecastInputSchema},\n  output: {schema: GenerateRevenueForecastOutputSchema},\n  prompt: `You are a financial analyst providing revenue forecasts.\n\n  Analyze the monthly revenue data for the last three months and provide a forecast of how these trends might impact future revenue.\n\n  Monthly Revenue ({{currency}}):\n  - Month 1: {{{monthlyRevenue.0}}}\n  - Month 2: {{{monthlyRevenue.1}}}\n  - Month 3: {{{monthlyRevenue.2}}}\n\n  Consider factors like growth rate, seasonality, and any noticeable trends.\n  The forecast should be a concise paragraph.\n  `,\n});\n\nconst generateRevenueForecastFlow = ai.defineFlow(\n  {\n    name: 'generateRevenueForecastFlow',\n    inputSchema: GenerateRevenueForecastInputSchema,\n    outputSchema: GenerateRevenueForecastOutputSchema,\n  },\n  async input => {\n    const {output} = await prompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":";;;;;AAEA;;;;;;;;CAQC,GAED;AACA;AAAA;;;;;;AAEA,MAAM,qCAAqC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAClD,gBAAgB,uIAAA,CAAA,IAAC,CACd,KAAK,CAAC,uIAAA,CAAA,IAAC,CAAC,MAAM,IACd,MAAM,CAAC,GACP,QAAQ,CAAC;IACZ,UAAU,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AAChC;AAGA,MAAM,sCAAsC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACnD,UAAU,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AAChC;AAGO,eAAe,wBAAwB,KAAmC;IAC/E,OAAO,4BAA4B;AACrC;AAEA,MAAM,SAAS,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC7B,MAAM;IACN,OAAO;QAAC,QAAQ;IAAkC;IAClD,QAAQ;QAAC,QAAQ;IAAmC;IACpD,QAAQ,CAAC;;;;;;;;;;;EAWT,CAAC;AACH;AAEA,MAAM,8BAA8B,mHAAA,CAAA,KAAE,CAAC,UAAU,CAC/C;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAM;IACJ,MAAM,EAAC,MAAM,EAAC,GAAG,MAAM,OAAO;IAC9B,OAAO;AACT;;;IA/BoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 315, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/dashboard/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {generateRevenueForecast as '400732a7a332be95f0eebe244cd50e2d46a37baef1'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 373, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/dashboard/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/dashboard/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/dashboard/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA8R,GAC3T,4DACA","debugId":null}},
    {"offset": {"line": 387, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/dashboard/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/dashboard/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/dashboard/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA0Q,GACvS,wCACA","debugId":null}},
    {"offset": {"line": 401, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}