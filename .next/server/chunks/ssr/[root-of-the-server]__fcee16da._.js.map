{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 223, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/genkit.ts"],"sourcesContent":["import {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai';\n\nexport const ai = genkit({\n  plugins: [googleAI()],\n  model: 'googleai/gemini-2.5-flash',\n});\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;;;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QAAC,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD;KAAI;IACrB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 244, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/generate-custom-reports.ts"],"sourcesContent":["'use server';\n\n/**\n * @fileOverview This file defines a Genkit flow for generating custom business reports based on user-specified insights.\n *\n * The flow takes a user query as input and returns a generated report answering the query.\n * - generateCustomReport - The function to call to generate a custom report.\n * - GenerateCustomReportInput - The input type for the generateCustomReport function.\n * - GenerateCustomReportOutput - The output type for the generateCustomReport function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\n// Define the input schema\nconst GenerateCustomReportInputSchema = z.object({\n  query: z.string().describe('The user query specifying the desired business insights.'),\n});\nexport type GenerateCustomReportInput = z.infer<typeof GenerateCustomReportInputSchema>;\n\n// Define the output schema\nconst GenerateCustomReportOutputSchema = z.object({\n  report: z.string().describe('The generated report answering the user query.'),\n});\nexport type GenerateCustomReportOutput = z.infer<typeof GenerateCustomReportOutputSchema>;\n\n// Define the wrapper function\nexport async function generateCustomReport(input: GenerateCustomReportInput): Promise<GenerateCustomReportOutput> {\n  return generateCustomReportFlow(input);\n}\n\n// Define the prompt\nconst generateCustomReportPrompt = ai.definePrompt({\n  name: 'generateCustomReportPrompt',\n  input: {schema: GenerateCustomReportInputSchema},\n  output: {schema: GenerateCustomReportOutputSchema},\n  prompt: `You are an AI assistant specialized in generating custom business reports.\n  Based on the user's query, analyze the available data and provide a concise and informative report.\n  Query: {{{query}}}`,\n});\n\n// Define the flow\nconst generateCustomReportFlow = ai.defineFlow(\n  {\n    name: 'generateCustomReportFlow',\n    inputSchema: GenerateCustomReportInputSchema,\n    outputSchema: GenerateCustomReportOutputSchema,\n  },\n  async input => {\n    const {output} = await generateCustomReportPrompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":";;;;;AAEA;;;;;;;CAOC,GAED;AACA;AAAA;;;;;;AAEA,0BAA0B;AAC1B,MAAM,kCAAkC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC/C,OAAO,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AAC7B;AAGA,2BAA2B;AAC3B,MAAM,mCAAmC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAChD,QAAQ,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AAC9B;AAIO,eAAe,qBAAqB,KAAgC;IACzE,OAAO,yBAAyB;AAClC;AAEA,oBAAoB;AACpB,MAAM,6BAA6B,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IACjD,MAAM;IACN,OAAO;QAAC,QAAQ;IAA+B;IAC/C,QAAQ;QAAC,QAAQ;IAAgC;IACjD,QAAQ,CAAC;;oBAES,CAAC;AACrB;AAEA,kBAAkB;AAClB,MAAM,2BAA2B,mHAAA,CAAA,KAAE,CAAC,UAAU,CAC5C;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAM;IACJ,MAAM,EAAC,MAAM,EAAC,GAAG,MAAM,2BAA2B;IAClD,OAAO;AACT;;;IAxBoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 308, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/dashboard/reports/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {generateCustomReport as '40635489f34cfb1ac563716cf37f416490ea731523'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 366, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/reports/report-generator.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ReportGenerator = registerClientReference(\n    function() { throw new Error(\"Attempted to call ReportGenerator() from the server but ReportGenerator is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/reports/report-generator.tsx <module evaluation>\",\n    \"ReportGenerator\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,kBAAkB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,6EACA","debugId":null}},
    {"offset": {"line": 380, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/reports/report-generator.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ReportGenerator = registerClientReference(\n    function() { throw new Error(\"Attempted to call ReportGenerator() from the server but ReportGenerator is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/reports/report-generator.tsx\",\n    \"ReportGenerator\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,kBAAkB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,yDACA","debugId":null}},
    {"offset": {"line": 394, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 404, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/dashboard/reports/page.tsx"],"sourcesContent":["import { ReportGenerator } from \"@/components/reports/report-generator\";\n\nexport default function ReportsPage() {\n    return (\n        <div>\n            <ReportGenerator />\n        </div>\n    )\n}\n"],"names":[],"mappings":";;;;AAAA;;;AAEe,SAAS;IACpB,qBACI,8OAAC;kBACG,cAAA,8OAAC,oJAAA,CAAA,kBAAe;;;;;;;;;;AAG5B","debugId":null}}]
}